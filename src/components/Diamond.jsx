// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useRef } from 'react';
// import { useGLTF } from '@react-three/drei';

// export function Diamond(props) {
//   const { nodes, materials } = useGLTF('/models/Diamond.glb');
//   return (
//     <group {...props} dispose={null}>
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pCone1_DiamondOutside_0.geometry}
//         material={materials.DiamondOutside}
//       />
//     </group>
//   );
// }

// useGLTF.preload('/models/diamond.glb');

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useGSAP } from '@gsap/react';
import gsap from 'gsap';

export function Diamond(props) {
  const shapeContainer = useRef(null);
  const diamondContainer = useRef(null);
  const { nodes, materials } = useGLTF('/models/Diamond.glb');

  useGSAP(() => {
    const tl = gsap.timeline();
    
    // Main container slides in from above
    tl.from(shapeContainer.current.position, {
      y: 5,
      duration: 3,
      ease: 'circ.out',
    });
    
    // Diamond rotates as it enters
    tl.from(
      diamondContainer.current.rotation,
      {
        x: -Math.PI,
        y: Math.PI,
        z: Math.PI * 0.5,
        duration: 10,
        ease: 'power1.inOut',
      },
      '-=25%'
    );
  }, []);

  return (
    <group ref={shapeContainer} {...props} dispose={null}>
      <group ref={diamondContainer}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.pCone1_DiamondOutside_0.geometry}
          material={materials.DiamondOutside}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/models/Diamond.glb');
